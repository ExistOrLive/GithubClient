# action 语法 https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
# Build Check 仅在提交后做编译检查
name: ZLGithub Build Check 

on:                               # 触发条件
  push:
    branches-ignore:
      - master
      - develop
      - release

jobs:
  build:
    name: build
    runs-on: macos-12.0.1 # runner 系统 
    steps:
    - name: checkout
      uses: actions/checkout@v2.0.0
      #with: 
        #ref: ${{ env.GITHUB_REF }}  # 默认是切到出发workflow的节点
    - name: download secret file
      working-directory: ./ZLGitHubClient          # 指定run 的工作目录
      env: 
        GITHUBTOKEN: ${{ secrets.GITHUBTOKEN }}
      run: |
        pip3 install requests
        python3 DownloadSecretFile/DownloadSecrectFile.py $GITHUBTOKEN
        mv ZLGithubAppKey.h ZLGitHubClient/System/ZLSupportFiles/ZLGithubAppKey.h
        mv GoogleService-Info.plist ZLGitHubClient/GoogleService-Info.plist
    - name: construct build enviroment
      working-directory: ./ZLGitHubClient          # 指定run 的工作目录
      run: |
        echo "start construct build enviroment"
        gem cleanup
        gem install bundler
        bundle install
        bundle exec pod repo update
        bundle exec pod install
        echo "construct build enviroment success"
    - name: build app
      working-directory: ./ZLGitHubClient          # 指定run 的工作目录
      env: 
        MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GITHUB_URL: ${{ secrets.MATCH_GITHUB_URL }}
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.apple_pwd }}   # pwd for upload to testflight 
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}                                    
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }} 
      run: |
        echo "start project build check"
        bundle exec fastlane github_action_build_check
        echo "project build success"
    - name: email send for fail
      working-directory: ./ZLGitHubClient/EmailSender
      if: ${{ failure() }}                             # expression https://docs.github.com/en/actions/learn-github-actions/expressions#job-status-check-functions
      env:    
        NOREPLEY_PWD: ${{ secrets.NOREPLY_PASSWD }}
        Email_Receivers: ${{ secrets.Email_Receivers }}
      run: |
        python3 BuildCheckEmailSender.py $NOREPLEY_PWD $Email_Receivers false
    - name: email send for success
      working-directory: ./ZLGitHubClient/EmailSender
      if: ${{ success() }}                             # expression https://docs.github.com/en/actions/learn-github-actions/expressions#job-status-check-functions
      env:    
        NOREPLEY_PWD: ${{ secrets.NOREPLY_PASSWD }}
        Email_Receivers: ${{ secrets.Email_Receivers }}
      run: |
        python3 BuildCheckEmailSender.py $NOREPLEY_PWD $Email_Receivers true
